
CTORS:
> PreCall currently not affecting value sent to base ctor...





********************************************************************
TO DO:

> Cuckoos on Constructors
> No abstract methods! Enforce at weaving stage: throw error if discovered.
> structs rather than classes
> async
> Test Cuckoos declared in other assemblies
> Beware array types: in both ctor args and gen params!
> Return value to police its type
> CallInner and Proceed to check call phase
> Nullable types in generic args




*******************************************************************
DOUBTFUL:

> Light-weight SyncLock on lazy args creation
	- args are only created once per call, but cuckoo may thread off and access args from there...



*******************************************************************
DONE:
> Static roost field to be nested within Call class DONE
> Static classes DONE
> Static methods DONE
> Optional args in CuckooAttributes DONE
> Optional args in cuckooed methods DONE
> CallArg<T> classes, deriving from exposed ICallArg DONE
> CallArgs should check type of value set DONE
> ByRef parameters DONE
> Cooler lambda-based MethodTester DONE
> Generic classes DONE
> Multiple cuckoos in one nest DONE
> Init to be called DONE
> Change returned value DONE
> Args wrapped in classes DONE
> Name-provision encapsulated DONE
> Generic methods: generic args + generic return DONE
