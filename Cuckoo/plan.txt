

********************************************************************
TO DO:

> interface + abstract methods
> async
> Calls to have bespoke little method/param info classes, with lazy GetParameterInfo() and GetMethodInfo() funcs
> Use abstract CallBase class, with only sub-methods emitted
> Test Cuckoos declared in other assemblies
> Beware array types: in both ctor args and gen params!
> Return value to police its type



*******************************************************************
DOUBTFUL:

> Light-weight SyncLock on lazy args creation
	- args are only created once per call, but cuckoo may thread off and access args from there...



*******************************************************************
DONE:
> Static classes DONE
> Static methods DONE
> Optional args in CuckooAttributes DONE
> Optional args in cuckooed methods DONE
> CallArg<T> classes, deriving from exposed ICallArg DONE
> CallArgs should check type of value set DONE
> ByRef parameters DONE
> Cooler lambda-based MethodTester DONE
> Generic classes DONE
> Multiple cuckoos in one nest DONE
> Init to be called DONE
> Change returned value DONE
> Args wrapped in classes DONE
> Name-provision encapsulated DONE
> Generic methods: generic args + generic return DONE
